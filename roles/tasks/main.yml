---
- name: Install Python MySQL client
  ansible.builtin.package:
    name:
      - python3-PyMySQL  # For Python 3
      # - MySQL-python   # For Python 2 (deprecated)
    state: present


- name: Update system packages
  ansible.builtin.yum:
    name: "*"
    state: latest

- name: Install Apache & MariaDB
  ansible.builtin.yum:
    name:
      - httpd
      - mariadb-server
    state: present

- name: Start and enable services
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - httpd
    - mariadb

- name: Secure MariaDB installation
  ansible.builtin.command: mysql -u root -p{{ db_root_password }} -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ db_root_password }}'; DELETE FROM mysql.user WHERE User=''; DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1'); DROP DATABASE IF EXISTS test; FLUSH PRIVILEGES;"
  changed_when: false
  no_log: true

- name: Create WordPress database and user
  ansible.builtin.mysql_db:
    name: "{{ wp_db_name }}"
    state: present
    login_user: root
    login_password: "{{ db_root_password }}"

- name: Create WordPress database user
  ansible.builtin.mysql_user:
    name: "{{ wp_db_user }}"
    password: "{{ wp_db_password }}"
    priv: "{{ wp_db_name }}.*:ALL"
    state: present
    login_user: root
    login_password: "{{ db_root_password }}"

- name: Install PHP and required modules
  ansible.builtin.dnf:
    name:
      - php
      - php-mysqlnd
      - php-fpm
      - php-json
      - php-mbstring
      - php-xml
      - php-cli
      - php-gd
      - php-curl
    state: present
  notify: Restart Apache

- name: Download WordPress
  ansible.builtin.get_url:
    url: https://wordpress.org/latest.tar.gz
    dest: /tmp/latest.tar.gz

- name: Extract WordPress
  ansible.builtin.unarchive:
    src: /tmp/latest.tar.gz
    dest: "{{ document_root }}"
    remote_src: true
    extra_opts: [--strip-components=1]
    creates: "{{ document_root }}/wp-config-sample.php"

- name: Configure WordPress
  block:
    - name: Copy wp-config-sample.php to wp-config.php
      ansible.builtin.copy:
        src: "{{ document_root }}/wp-config-sample.php"
        dest: "{{ document_root }}/wp-config.php"
        remote_src: true
        force: false

    - name: Update WordPress configuration
      ansible.builtin.replace:
        path: "{{ document_root }}/wp-config.php"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      loop:
        - { regexp: "define\\(\\s*'DB_NAME'\\s*,\\s*'.*?'\\s*\\);", replace: "define( 'DB_NAME', '{{ wp_db_name }}' );" }
        - { regexp: "define\\(\\s*'DB_USER'\\s*,\\s*'.*?'\\s*\\);", replace: "define( 'DB_USER', '{{ wp_db_user }}' );" }
        - { regexp: "define\\(\\s*'DB_PASSWORD'\\s*,\\s*'.*?'\\s*\\);", replace: "define( 'DB_PASSWORD', '{{ wp_db_password }}' );" }
  notify: Restart Apache

- name: Set correct permissions
  ansible.builtin.file:
    path: "{{ document_root }}"
    owner: apache
    group: apache
    mode: '0755'
    recurse: true
